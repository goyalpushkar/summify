// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Text summarization flow that allows users to adjust the summary length.
 *
 * - adjustSummaryLength - A function that handles the text summarization process with adjustable length.
 * - AdjustSummaryLengthInput - The input type for the adjustSummaryLength function.
 * - AdjustSummaryLengthOutput - The return type for the adjustSummaryLength function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const AdjustSummaryLengthInputSchema = z.object({
  text: z.string().describe('The text to summarize.'),
  length: z
    .enum(['short', 'medium', 'long'])
    .default('medium')
    .describe('The desired length of the summary.'),
});
export type AdjustSummaryLengthInput = z.infer<
  typeof AdjustSummaryLengthInputSchema
>;

const AdjustSummaryLengthOutputSchema = z.object({
  summary: z.string().describe('The summarized text.'),
});
export type AdjustSummaryLengthOutput = z.infer<
  typeof AdjustSummaryLengthOutputSchema
>;

export async function adjustSummaryLength(
  input: AdjustSummaryLengthInput
): Promise<AdjustSummaryLengthOutput> {
  return adjustSummaryLengthFlow(input);
}

const prompt = ai.definePrompt({
  name: 'adjustSummaryLengthPrompt',
  input: {
    schema: z.object({
      text: z.string().describe('The text to summarize.'),
      length: z
        .enum(['short', 'medium', 'long'])
        .default('medium')
        .describe('The desired length of the summary.'),
    }),
  },
  output: {
    schema: z.object({
      summary: z.string().describe('The summarized text.'),
    }),
  },
  prompt: `Summarize the following text to a {{{length}}} length:\n\n{{{text}}}`,
});

const adjustSummaryLengthFlow = ai.defineFlow<
  typeof AdjustSummaryLengthInputSchema,
  typeof AdjustSummaryLengthOutputSchema
>(
  {
    name: 'adjustSummaryLengthFlow',
    inputSchema: AdjustSummaryLengthInputSchema,
    outputSchema: AdjustSummaryLengthOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
